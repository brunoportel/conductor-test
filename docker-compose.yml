# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: . # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - db1 # This service depends on mysql. Start that first.
      - db2 # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      MYSQL_JDBC_1: jdbc:mysql://db1:3306/database1?useTimezone=true&serverTimezone=UTC
      MYSQL_JDBC_2: jdbc:mysql://db2:3306/database2?useTimezone=true&serverTimezone=UTC
      MYSQL_USER: root
      MYSQL_PASS: 9gtKfqdJeKuvqakK
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Database Service (Mysql)
  db1:
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3316:3306"
    restart: always
    environment:
      MYSQL_DATABASE: database1
      MYSQL_ROOT_PASSWORD: 9gtKfqdJeKuvqakK
    volumes:
      - ./scripts/database1.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend  

  # Database Service (Mysql)
  db2:
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3317:3306"
    restart: always
    environment:
      MYSQL_DATABASE: database2
      MYSQL_ROOT_PASSWORD: 9gtKfqdJeKuvqakK
    volumes:
      - ./scripts/database2.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
